plugins {
    id 'java-library'
    id 'maven-publish'
    id 'de.gliderpilot.semantic-release' version '1.4.2'
}

group 'io.apimap.client'

repositories {
    mavenCentral()
    maven {
        url = uri("https://maven.pkg.github.com/apimap/java-rest-interface")
        credentials {
            username = project.findProperty("gpr.user") ?: System.getenv("MULTI_PACKAGES_USER")
            password = project.findProperty("gpr.key") ?: System.getenv("MULTI_PACKAGES_TOKEN")
        }
    }
}

sourceSets {
    integrationTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

semanticRelease {
    releaseBranches {
        include 'main'
    }
    repo {
        ghToken = System.getenv('GITHUB_TOKEN')
    }
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
}

configurations {
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.13.3'
    implementation 'commons-io:commons-io:2.11.0'

    api "org.apache.httpcomponents.client5:httpclient5:5.1.3"
    api 'io.apimap.api:rest-interface:2.1.3'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.6.1'
    testImplementation 'org.mockito:mockito-core:4.6.1'

    integrationTestImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    integrationTestImplementation 'org.mockito:mockito-junit-jupiter:4.6.1'
    integrationTestImplementation 'org.mockito:mockito-core:4.6.1'
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/apimap/java-rest-client")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

integrationTest {
    useJUnitPlatform()
}

test {
    useJUnitPlatform()
}